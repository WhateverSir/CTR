#loc = loc(unknown)
#loc1 = loc("input")
#loc4 = loc("/embedding_layer/Gather_output_0_Gather_si32")
#loc6 = loc("embedding_layer.embedding_layer.uid.weight_convert_to_activation")
#loc9 = loc("/embedding_layer/Gather_1_output_0_Gather_si32")
#loc11 = loc("embedding_layer.embedding_layer.vid.weight_convert_to_activation")
#loc14 = loc("/embedding_layer/Gather_2_output_0_Gather_si32")
#loc16 = loc("embedding_layer.embedding_layer.sex.weight_convert_to_activation")
#loc19 = loc("/embedding_layer/Gather_3_output_0_Gather_si32")
#loc21 = loc("embedding_layer.embedding_layer.age.weight_convert_to_activation")
#loc24 = loc("/embedding_layer/Gather_4_output_0_Gather_si32")
#loc26 = loc("embedding_layer.embedding_layer.job.weight_convert_to_activation")
module attributes {module.FLOPs = 468593920 : i64, module.asymmetric = true, module.chip = "bm1684", module.coeff_addr = 4379901952 : i64, module.coeff_size = 6041600 : i64, module.mode = "F32", module.name = "DCN", module.neuron_addr = 4385943552 : i64, module.neuron_size = 3182592 : i64, module.platform = "ONNX", module.state = "TPU_ADDRESSED", module.weight_file = "dcn_tpu_addressed_bm1684_f32_weight.npz"} {
  func.func @main(%arg0: tensor<256x5xf32> loc(unknown)) -> tensor<256x1xf32, 4385943552 : i64> {
    %0 = "top.Input"(%arg0) : (tensor<256x5xf32>) -> tensor<256x5xf32, 4389097472 : i64> loc(#loc1)
    %1:10 = call @subfunc_0(%0) : (tensor<256x5xf32, 4389097472 : i64>) -> (tensor<256xi32, 4389122048 : i64>, tensor<6032x64xf32, 4379901952 : i64>, tensor<256xi32, 4389117952 : i64>, tensor<3027x64xf32, 4381446144 : i64>, tensor<256xi32, 4389113856 : i64>, tensor<3x64xf32, 4382224384 : i64>, tensor<256xi32, 4389109760 : i64>, tensor<8x64xf32, 4382228480 : i64>, tensor<256xi32, 4389105664 : i64>, tensor<22x64xf32, 4382232576 : i64>) loc(#loc)
    %2 = call @subfunc_1(%1#1, %1#0, %1#3, %1#2, %1#5, %1#4, %1#7, %1#6, %1#9, %1#8) : (tensor<6032x64xf32, 4379901952 : i64>, tensor<256xi32, 4389122048 : i64>, tensor<3027x64xf32, 4381446144 : i64>, tensor<256xi32, 4389117952 : i64>, tensor<3x64xf32, 4382224384 : i64>, tensor<256xi32, 4389113856 : i64>, tensor<8x64xf32, 4382228480 : i64>, tensor<256xi32, 4389109760 : i64>, tensor<22x64xf32, 4382232576 : i64>, tensor<256xi32, 4389105664 : i64>) -> tensor<256x1xf32, 4385943552 : i64> loc(#loc)
    return %2 : tensor<256x1xf32, 4385943552 : i64> loc(#loc)
  } loc(#loc)
  func.func @subfunc_0(%arg0: tensor<256x5xf32, 4389097472 : i64> loc("input")) -> (tensor<256xi32, 4389122048 : i64>, tensor<6032x64xf32, 4379901952 : i64>, tensor<256xi32, 4389117952 : i64>, tensor<3027x64xf32, 4381446144 : i64>, tensor<256xi32, 4389113856 : i64>, tensor<3x64xf32, 4382224384 : i64>, tensor<256xi32, 4389109760 : i64>, tensor<8x64xf32, 4382228480 : i64>, tensor<256xi32, 4389105664 : i64>, tensor<22x64xf32, 4382232576 : i64>) attributes {id = 0 : i64, mode = #tpu<run_mode TPU_STATIC>, next_index = array<i32: 1>} {
    %0 = "top.None"() : () -> none loc(#loc)
    %1 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 1], offset = [0, 0], steps = [1, 1]} : (tensor<256x5xf32, 4389097472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4389105664 : i64> loc(#loc2)
    %2 = "tpu.Reshape"(%1, %0) : (tensor<256x1xf32, 4389105664 : i64>, none) -> tensor<256xf32, 4389105664 : i64> loc(#loc3)
    %3 = "tpu.Cast"(%2) {with_scale = true} : (tensor<256xf32, 4389105664 : i64>) -> tensor<256xi32, 4389122048 : i64> loc(#loc4)
    %4 = "top.Weight"() : () -> tensor<6032x64xf32, 4379901952 : i64> loc(#loc5)
    %5 = "tpu.Weight2Activation"(%4) : (tensor<6032x64xf32, 4379901952 : i64>) -> tensor<6032x64xf32, 4379901952 : i64> loc(#loc6)
    %6 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 2], offset = [0, 1], steps = [1, 1]} : (tensor<256x5xf32, 4389097472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4389105664 : i64> loc(#loc7)
    %7 = "tpu.Reshape"(%6, %0) : (tensor<256x1xf32, 4389105664 : i64>, none) -> tensor<256xf32, 4389105664 : i64> loc(#loc8)
    %8 = "tpu.Cast"(%7) {with_scale = true} : (tensor<256xf32, 4389105664 : i64>) -> tensor<256xi32, 4389117952 : i64> loc(#loc9)
    %9 = "top.Weight"() : () -> tensor<3027x64xf32, 4381446144 : i64> loc(#loc10)
    %10 = "tpu.Weight2Activation"(%9) : (tensor<3027x64xf32, 4381446144 : i64>) -> tensor<3027x64xf32, 4381446144 : i64> loc(#loc11)
    %11 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 3], offset = [0, 2], steps = [1, 1]} : (tensor<256x5xf32, 4389097472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4389105664 : i64> loc(#loc12)
    %12 = "tpu.Reshape"(%11, %0) : (tensor<256x1xf32, 4389105664 : i64>, none) -> tensor<256xf32, 4389105664 : i64> loc(#loc13)
    %13 = "tpu.Cast"(%12) {with_scale = true} : (tensor<256xf32, 4389105664 : i64>) -> tensor<256xi32, 4389113856 : i64> loc(#loc14)
    %14 = "top.Weight"() : () -> tensor<3x64xf32, 4382224384 : i64> loc(#loc15)
    %15 = "tpu.Weight2Activation"(%14) : (tensor<3x64xf32, 4382224384 : i64>) -> tensor<3x64xf32, 4382224384 : i64> loc(#loc16)
    %16 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 4], offset = [0, 3], steps = [1, 1]} : (tensor<256x5xf32, 4389097472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4389105664 : i64> loc(#loc17)
    %17 = "tpu.Reshape"(%16, %0) : (tensor<256x1xf32, 4389105664 : i64>, none) -> tensor<256xf32, 4389105664 : i64> loc(#loc18)
    %18 = "tpu.Cast"(%17) {with_scale = true} : (tensor<256xf32, 4389105664 : i64>) -> tensor<256xi32, 4389109760 : i64> loc(#loc19)
    %19 = "top.Weight"() : () -> tensor<8x64xf32, 4382228480 : i64> loc(#loc20)
    %20 = "tpu.Weight2Activation"(%19) : (tensor<8x64xf32, 4382228480 : i64>) -> tensor<8x64xf32, 4382228480 : i64> loc(#loc21)
    %21 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 5], offset = [0, 4], steps = [1, 1]} : (tensor<256x5xf32, 4389097472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4385943552 : i64> loc(#loc22)
    %22 = "tpu.Reshape"(%21, %0) : (tensor<256x1xf32, 4385943552 : i64>, none) -> tensor<256xf32, 4385943552 : i64> loc(#loc23)
    %23 = "tpu.Cast"(%22) {with_scale = true} : (tensor<256xf32, 4385943552 : i64>) -> tensor<256xi32, 4389105664 : i64> loc(#loc24)
    %24 = "top.Weight"() : () -> tensor<22x64xf32, 4382232576 : i64> loc(#loc25)
    %25 = "tpu.Weight2Activation"(%24) : (tensor<22x64xf32, 4382232576 : i64>) -> tensor<22x64xf32, 4382232576 : i64> loc(#loc26)
    return %3, %5, %8, %10, %13, %15, %18, %20, %23, %25 : tensor<256xi32, 4389122048 : i64>, tensor<6032x64xf32, 4379901952 : i64>, tensor<256xi32, 4389117952 : i64>, tensor<3027x64xf32, 4381446144 : i64>, tensor<256xi32, 4389113856 : i64>, tensor<3x64xf32, 4382224384 : i64>, tensor<256xi32, 4389109760 : i64>, tensor<8x64xf32, 4382228480 : i64>, tensor<256xi32, 4389105664 : i64>, tensor<22x64xf32, 4382232576 : i64> loc(#loc)
  } loc(#loc)
  func.func @subfunc_1(%arg0: tensor<6032x64xf32, 4379901952 : i64> loc("embedding_layer.embedding_layer.uid.weight_convert_to_activation"), %arg1: tensor<256xi32, 4389122048 : i64> loc("/embedding_layer/Gather_output_0_Gather_si32"), %arg2: tensor<3027x64xf32, 4381446144 : i64> loc("embedding_layer.embedding_layer.vid.weight_convert_to_activation"), %arg3: tensor<256xi32, 4389117952 : i64> loc("/embedding_layer/Gather_1_output_0_Gather_si32"), %arg4: tensor<3x64xf32, 4382224384 : i64> loc("embedding_layer.embedding_layer.sex.weight_convert_to_activation"), %arg5: tensor<256xi32, 4389113856 : i64> loc("/embedding_layer/Gather_2_output_0_Gather_si32"), %arg6: tensor<8x64xf32, 4382228480 : i64> loc("embedding_layer.embedding_layer.age.weight_convert_to_activation"), %arg7: tensor<256xi32, 4389109760 : i64> loc("/embedding_layer/Gather_3_output_0_Gather_si32"), %arg8: tensor<22x64xf32, 4382232576 : i64> loc("embedding_layer.embedding_layer.job.weight_convert_to_activation"), %arg9: tensor<256xi32, 4389105664 : i64> loc("/embedding_layer/Gather_4_output_0_Gather_si32")) -> tensor<256x1xf32, 4385943552 : i64> attributes {id = 1 : i64, mode = #tpu<run_mode TPU_DYNAMIC>, next_index = array<i32: -1>} {
    %0 = "tpu.Buffer"() : () -> tensor<2x386048xf32, 4385943552 : i64> loc(#loc27)
    %1 = "tpu.Gather"(%arg0, %arg1, %0) {axis = 0 : i64} : (tensor<6032x64xf32, 4379901952 : i64>, tensor<256xi32, 4389122048 : i64>, tensor<2x386048xf32, 4385943552 : i64>) -> tensor<256x64xf32, 4389031936 : i64> loc(#loc28)
    %2 = "tpu.Buffer"() : () -> tensor<2x193728xf32, 4385943552 : i64> loc(#loc29)
    %3 = "tpu.Gather"(%arg2, %arg3, %2) {axis = 0 : i64} : (tensor<3027x64xf32, 4381446144 : i64>, tensor<256xi32, 4389117952 : i64>, tensor<2x193728xf32, 4385943552 : i64>) -> tensor<256x64xf32, 4387495936 : i64> loc(#loc30)
    %4 = "tpu.Buffer"() : () -> tensor<2x192xf32, 4385943552 : i64> loc(#loc31)
    %5 = "tpu.Gather"(%arg4, %arg5, %4) {axis = 0 : i64} : (tensor<3x64xf32, 4382224384 : i64>, tensor<256xi32, 4389113856 : i64>, tensor<2x192xf32, 4385943552 : i64>) -> tensor<256x64xf32, 4386074624 : i64> loc(#loc32)
    %6 = "tpu.Buffer"() : () -> tensor<2x512xf32, 4385943552 : i64> loc(#loc33)
    %7 = "tpu.Gather"(%arg6, %arg7, %6) {axis = 0 : i64} : (tensor<8x64xf32, 4382228480 : i64>, tensor<256xi32, 4389109760 : i64>, tensor<2x512xf32, 4385943552 : i64>) -> tensor<256x64xf32, 4386009088 : i64> loc(#loc34)
    %8 = "tpu.Buffer"() : () -> tensor<2x1408xf32, 4387561472 : i64> loc(#loc35)
    %9 = "tpu.Gather"(%arg8, %arg9, %8) {axis = 0 : i64} : (tensor<22x64xf32, 4382232576 : i64>, tensor<256xi32, 4389105664 : i64>, tensor<2x1408xf32, 4387561472 : i64>) -> tensor<256x64xf32, 4385943552 : i64> loc(#loc36)
    %10 = "tpu.Concat"(%1, %3, %5, %7, %9) {axis = 1 : si32, do_relu = false, only_merge = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x64xf32, 4389031936 : i64>, tensor<256x64xf32, 4387495936 : i64>, tensor<256x64xf32, 4386074624 : i64>, tensor<256x64xf32, 4386009088 : i64>, tensor<256x64xf32, 4385943552 : i64>) -> tensor<256x320xf32, 4387622912 : i64> loc(#loc37)
    %11 = "top.Weight"() : () -> tensor<320x1xf32, 4382240768 : i64> loc(#loc38)
    %12 = "tpu.MatMul"(%10, %11, %8) {do_relu = false, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x320xf32, 4387622912 : i64>, tensor<320x1xf32, 4382240768 : i64>, tensor<2x1408xf32, 4387561472 : i64>) -> tensor<256x1xf32, 4387573760 : i64> loc(#loc39)
    %13 = "tpu.Mul"(%10, %12) {do_relu = false, multiplier = 1 : si32, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, rshift = 0 : si32} : (tensor<256x320xf32, 4387622912 : i64>, tensor<256x1xf32, 4387573760 : i64>) -> tensor<256x320xf32, 4386271232 : i64> loc(#loc40)
    %14 = "top.Weight"() : () -> tensor<1x320xf32, 4382244864 : i64> loc(#loc41)
    %15 = "tpu.Add"(%13, %14) {do_relu = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x320xf32, 4386271232 : i64>, tensor<1x320xf32, 4382244864 : i64>) -> tensor<256x320xf32, 4385943552 : i64> loc(#loc42)
    %16 = "tpu.Add"(%15, %10) {do_relu = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x320xf32, 4385943552 : i64>, tensor<256x320xf32, 4387622912 : i64>) -> tensor<256x320xf32, 4386926592 : i64> loc(#loc43)
    %17 = "top.Weight"() : () -> tensor<320x1xf32, 4382248960 : i64> loc(#loc44)
    %18 = "tpu.MatMul"(%16, %17, %8) {do_relu = false, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x320xf32, 4386926592 : i64>, tensor<320x1xf32, 4382248960 : i64>, tensor<2x1408xf32, 4387561472 : i64>) -> tensor<256x1xf32, 4387573760 : i64> loc(#loc45)
    %19 = "tpu.Mul"(%10, %18) {do_relu = false, multiplier = 1 : si32, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, rshift = 0 : si32} : (tensor<256x320xf32, 4387622912 : i64>, tensor<256x1xf32, 4387573760 : i64>) -> tensor<256x320xf32, 4386271232 : i64> loc(#loc46)
    %20 = "top.Weight"() : () -> tensor<1x320xf32, 4382253056 : i64> loc(#loc47)
    %21 = "tpu.Add"(%19, %20) {do_relu = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x320xf32, 4386271232 : i64>, tensor<1x320xf32, 4382253056 : i64>) -> tensor<256x320xf32, 4385943552 : i64> loc(#loc48)
    %22 = "tpu.Add"(%21, %16) {do_relu = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x320xf32, 4385943552 : i64>, tensor<256x320xf32, 4386926592 : i64>) -> tensor<256x320xf32, 4386598912 : i64> loc(#loc49)
    %23 = "top.Weight"() : () -> tensor<320x1xf32, 4382257152 : i64> loc(#loc50)
    %24 = "tpu.MatMul"(%22, %23, %8) {do_relu = false, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x320xf32, 4386598912 : i64>, tensor<320x1xf32, 4382257152 : i64>, tensor<2x1408xf32, 4387561472 : i64>) -> tensor<256x1xf32, 4387573760 : i64> loc(#loc51)
    %25 = "tpu.Mul"(%10, %24) {do_relu = false, multiplier = 1 : si32, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, rshift = 0 : si32} : (tensor<256x320xf32, 4387622912 : i64>, tensor<256x1xf32, 4387573760 : i64>) -> tensor<256x320xf32, 4386271232 : i64> loc(#loc52)
    %26 = "top.Weight"() : () -> tensor<1x320xf32, 4382261248 : i64> loc(#loc53)
    %27 = "tpu.Add"(%25, %26) {do_relu = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x320xf32, 4386271232 : i64>, tensor<1x320xf32, 4382261248 : i64>) -> tensor<256x320xf32, 4385943552 : i64> loc(#loc54)
    %28 = "tpu.Add"(%27, %22) {do_relu = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x320xf32, 4385943552 : i64>, tensor<256x320xf32, 4386598912 : i64>) -> tensor<256x320xf32, 4387295232 : i64> loc(#loc55)
    %29 = "top.Weight"() : () -> tensor<320x500xf32, 4382265344 : i64> loc(#loc56)
    %30 = "top.Weight"() : () -> tensor<500xf32, 4382908416 : i64> loc(#loc57)
    %31 = "tpu.MatMul"(%10, %29, %30) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x320xf32, 4387622912 : i64>, tensor<320x500xf32, 4382265344 : i64>, tensor<500xf32, 4382908416 : i64>) -> tensor<256x500xf32, 4385943552 : i64> loc(#loc58)
    %32 = "top.Weight"() : () -> tensor<500x500xf32, 4382912512 : i64> loc(#loc59)
    %33 = "top.Weight"() : () -> tensor<500xf32, 4383916032 : i64> loc(#loc60)
    %34 = "tpu.MatMul"(%31, %32, %33) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x500xf32, 4385943552 : i64>, tensor<500x500xf32, 4382912512 : i64>, tensor<500xf32, 4383916032 : i64>) -> tensor<256x500xf32, 4386455552 : i64> loc(#loc61)
    %35 = "top.Weight"() : () -> tensor<500x500xf32, 4383920128 : i64> loc(#loc62)
    %36 = "top.Weight"() : () -> tensor<500xf32, 4384923648 : i64> loc(#loc63)
    %37 = "tpu.MatMul"(%34, %35, %36) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x500xf32, 4386455552 : i64>, tensor<500x500xf32, 4383920128 : i64>, tensor<500xf32, 4384923648 : i64>) -> tensor<256x500xf32, 4385943552 : i64> loc(#loc64)
    %38 = "top.Weight"() : () -> tensor<500x500xf32, 4384927744 : i64> loc(#loc65)
    %39 = "top.Weight"() : () -> tensor<500xf32, 4385931264 : i64> loc(#loc66)
    %40 = "tpu.MatMul"(%37, %38, %39) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x500xf32, 4385943552 : i64>, tensor<500x500xf32, 4384927744 : i64>, tensor<500xf32, 4385931264 : i64>) -> tensor<256x500xf32, 4386783232 : i64> loc(#loc67)
    %41 = "tpu.Concat"(%28, %40) {axis = 1 : si32, do_relu = false, only_merge = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x320xf32, 4387295232 : i64>, tensor<256x500xf32, 4386783232 : i64>) -> tensor<256x820xf32, 4385943552 : i64> loc(#loc68)
    %42 = "top.Weight"() : () -> tensor<820x1xf32, 4385935360 : i64> loc(#loc69)
    %43 = "top.Weight"() : () -> tensor<1xf32, 4385939456 : i64> loc(#loc70)
    %44 = "tpu.MatMul"(%41, %42, %43) {do_relu = false, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 1 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x820xf32, 4385943552 : i64>, tensor<820x1xf32, 4385935360 : i64>, tensor<1xf32, 4385939456 : i64>) -> tensor<256x1xf32, 4386783232 : i64> loc(#loc71)
    %45 = "tpu.Active"(%44) {bias = 0.000000e+00 : f64, log = false, mode = #tpu<active_mode SIGMOID>, scale = 1.000000e+00 : f64} : (tensor<256x1xf32, 4386783232 : i64>) -> tensor<256x1xf32, 4385943552 : i64> loc(#loc72)
    return %45 : tensor<256x1xf32, 4385943552 : i64> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/embedding_layer/Gather_output_0_Slice")
#loc3 = loc("/embedding_layer/Gather_output_0_Gather")
#loc5 = loc("embedding_layer.embedding_layer.uid.weight")
#loc7 = loc("/embedding_layer/Gather_1_output_0_Slice")
#loc8 = loc("/embedding_layer/Gather_1_output_0_Gather")
#loc10 = loc("embedding_layer.embedding_layer.vid.weight")
#loc12 = loc("/embedding_layer/Gather_2_output_0_Slice")
#loc13 = loc("/embedding_layer/Gather_2_output_0_Gather")
#loc15 = loc("embedding_layer.embedding_layer.sex.weight")
#loc17 = loc("/embedding_layer/Gather_3_output_0_Slice")
#loc18 = loc("/embedding_layer/Gather_3_output_0_Gather")
#loc20 = loc("embedding_layer.embedding_layer.age.weight")
#loc22 = loc("/embedding_layer/Gather_4_output_0_Slice")
#loc23 = loc("/embedding_layer/Gather_4_output_0_Gather")
#loc25 = loc("embedding_layer.embedding_layer.job.weight")
#loc27 = loc("/embedding_layer/uid/Gather_output_0_Gather_buffer")
#loc28 = loc("/embedding_layer/uid/Gather_output_0_Gather")
#loc29 = loc("/embedding_layer/vid/Gather_output_0_Gather_buffer")
#loc30 = loc("/embedding_layer/vid/Gather_output_0_Gather")
#loc31 = loc("/embedding_layer/sex/Gather_output_0_Gather_buffer")
#loc32 = loc("/embedding_layer/sex/Gather_output_0_Gather")
#loc33 = loc("/embedding_layer/age/Gather_output_0_Gather_buffer")
#loc34 = loc("/embedding_layer/age/Gather_output_0_Gather")
#loc35 = loc("/embedding_layer/job/Gather_output_0_Gather_buffer")
#loc36 = loc("/embedding_layer/job/Gather_output_0_Gather")
#loc37 = loc("/Concat_output_0_Concat")
#loc38 = loc("onnx::MatMul_71")
#loc39 = loc("/dcn/w.0/MatMul_output_0_MatMul")
#loc40 = loc("/dcn/Mul_output_0_Mul")
#loc41 = loc("dcn.b.0")
#loc42 = loc("/dcn/Add_output_0_Add")
#loc43 = loc("/dcn/Add_1_output_0_Add")
#loc44 = loc("onnx::MatMul_72")
#loc45 = loc("/dcn/w.1/MatMul_output_0_MatMul")
#loc46 = loc("/dcn/Mul_1_output_0_Mul")
#loc47 = loc("dcn.b.1")
#loc48 = loc("/dcn/Add_2_output_0_Add")
#loc49 = loc("/dcn/Add_3_output_0_Add")
#loc50 = loc("onnx::MatMul_73")
#loc51 = loc("/dcn/w.2/MatMul_output_0_MatMul")
#loc52 = loc("/dcn/Mul_2_output_0_Mul")
#loc53 = loc("dcn.b.2")
#loc54 = loc("/dcn/Add_4_output_0_Add")
#loc55 = loc("/dcn/Add_5_output_0_Add")
#loc56 = loc("dnn.dnn.0.weight_fix")
#loc57 = loc("dnn.dnn.0.bias")
#loc58 = loc("/dnn/dnn/dnn.1/Relu_output_0_Relu")
#loc59 = loc("dnn.dnn.2.weight_fix")
#loc60 = loc("dnn.dnn.2.bias")
#loc61 = loc("/dnn/dnn/dnn.3/Relu_output_0_Relu")
#loc62 = loc("dnn.dnn.4.weight_fix")
#loc63 = loc("dnn.dnn.4.bias")
#loc64 = loc("/dnn/dnn/dnn.5/Relu_output_0_Relu")
#loc65 = loc("dnn.dnn.6.weight_fix")
#loc66 = loc("dnn.dnn.6.bias")
#loc67 = loc("/dnn/dnn/dnn.7/Relu_output_0_Relu")
#loc68 = loc("/Concat_1_output_0_Concat")
#loc69 = loc("Dense.weight_fix")
#loc70 = loc("Dense.bias")
#loc71 = loc("/Dense/Gemm_output_0_Gemm")
#loc72 = loc("output_Sigmoid")

