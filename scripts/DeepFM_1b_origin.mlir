#loc = loc(unknown)
module attributes {module.chip = "ALL", module.name = "DeepFM", module.platform = "ONNX", module.state = "TOP_F32", module.weight_file = "deepfm_top_f32_all_origin_weight.npz"} {
  func.func @main(%arg0: tensor<1x5xf32> loc(unknown)) -> tensor<1x1xf32> {
    %0 = "top.None"() : () -> none loc(#loc)
    %1 = "top.Input"(%arg0) : (tensor<1x5xf32>) -> tensor<1x5xf32> loc(#loc1)
    %2 = "top.Slice"(%1, %0, %0, %0) {ends = [1, 1], offset = [0, 0], steps = [1, 1]} : (tensor<1x5xf32>, none, none, none) -> tensor<1x1xf32> loc(#loc2)
    %3 = "top.Reshape"(%2) : (tensor<1x1xf32>) -> tensor<1xf32> loc(#loc3)
    %4 = "top.Weight"() : () -> tensor<6032x64xf32> loc(#loc4)
    %5 = "top.Gather"(%4, %3) {axis = 0 : i64} : (tensor<6032x64xf32>, tensor<1xf32>) -> tensor<1x64xf32> loc(#loc5)
    %6 = "top.Slice"(%1, %0, %0, %0) {ends = [1, 2], offset = [0, 1], steps = [1, 1]} : (tensor<1x5xf32>, none, none, none) -> tensor<1x1xf32> loc(#loc6)
    %7 = "top.Reshape"(%6) : (tensor<1x1xf32>) -> tensor<1xf32> loc(#loc7)
    %8 = "top.Weight"() : () -> tensor<3027x64xf32> loc(#loc8)
    %9 = "top.Gather"(%8, %7) {axis = 0 : i64} : (tensor<3027x64xf32>, tensor<1xf32>) -> tensor<1x64xf32> loc(#loc9)
    %10 = "top.Slice"(%1, %0, %0, %0) {ends = [1, 3], offset = [0, 2], steps = [1, 1]} : (tensor<1x5xf32>, none, none, none) -> tensor<1x1xf32> loc(#loc10)
    %11 = "top.Reshape"(%10) : (tensor<1x1xf32>) -> tensor<1xf32> loc(#loc11)
    %12 = "top.Weight"() : () -> tensor<3x64xf32> loc(#loc12)
    %13 = "top.Gather"(%12, %11) {axis = 0 : i64} : (tensor<3x64xf32>, tensor<1xf32>) -> tensor<1x64xf32> loc(#loc13)
    %14 = "top.Slice"(%1, %0, %0, %0) {ends = [1, 4], offset = [0, 3], steps = [1, 1]} : (tensor<1x5xf32>, none, none, none) -> tensor<1x1xf32> loc(#loc14)
    %15 = "top.Reshape"(%14) : (tensor<1x1xf32>) -> tensor<1xf32> loc(#loc15)
    %16 = "top.Weight"() : () -> tensor<8x64xf32> loc(#loc16)
    %17 = "top.Gather"(%16, %15) {axis = 0 : i64} : (tensor<8x64xf32>, tensor<1xf32>) -> tensor<1x64xf32> loc(#loc17)
    %18 = "top.Slice"(%1, %0, %0, %0) {ends = [1, 5], offset = [0, 4], steps = [1, 1]} : (tensor<1x5xf32>, none, none, none) -> tensor<1x1xf32> loc(#loc18)
    %19 = "top.Reshape"(%18) : (tensor<1x1xf32>) -> tensor<1xf32> loc(#loc19)
    %20 = "top.Weight"() : () -> tensor<22x64xf32> loc(#loc20)
    %21 = "top.Gather"(%20, %19) {axis = 0 : i64} : (tensor<22x64xf32>, tensor<1xf32>) -> tensor<1x64xf32> loc(#loc21)
    %22 = "top.Weight"() : () -> tensor<6032x1xf32> loc(#loc22)
    %23 = "top.Gather"(%22, %3) {axis = 0 : i64} : (tensor<6032x1xf32>, tensor<1xf32>) -> tensor<1x1xf32> loc(#loc23)
    %24 = "top.Weight"() : () -> tensor<3027x1xf32> loc(#loc24)
    %25 = "top.Gather"(%24, %7) {axis = 0 : i64} : (tensor<3027x1xf32>, tensor<1xf32>) -> tensor<1x1xf32> loc(#loc25)
    %26 = "top.Weight"() : () -> tensor<3x1xf32> loc(#loc26)
    %27 = "top.Gather"(%26, %11) {axis = 0 : i64} : (tensor<3x1xf32>, tensor<1xf32>) -> tensor<1x1xf32> loc(#loc27)
    %28 = "top.Weight"() : () -> tensor<8x1xf32> loc(#loc28)
    %29 = "top.Gather"(%28, %15) {axis = 0 : i64} : (tensor<8x1xf32>, tensor<1xf32>) -> tensor<1x1xf32> loc(#loc29)
    %30 = "top.Weight"() : () -> tensor<22x1xf32> loc(#loc30)
    %31 = "top.Gather"(%30, %19) {axis = 0 : i64} : (tensor<22x1xf32>, tensor<1xf32>) -> tensor<1x1xf32> loc(#loc31)
    %32 = "top.Unsqueeze"(%23) {axes = [0]} : (tensor<1x1xf32>) -> tensor<1x1x1xf32> loc(#loc32)
    %33 = "top.Unsqueeze"(%25) {axes = [0]} : (tensor<1x1xf32>) -> tensor<1x1x1xf32> loc(#loc33)
    %34 = "top.Unsqueeze"(%27) {axes = [0]} : (tensor<1x1xf32>) -> tensor<1x1x1xf32> loc(#loc34)
    %35 = "top.Unsqueeze"(%29) {axes = [0]} : (tensor<1x1xf32>) -> tensor<1x1x1xf32> loc(#loc35)
    %36 = "top.Unsqueeze"(%31) {axes = [0]} : (tensor<1x1xf32>) -> tensor<1x1x1xf32> loc(#loc36)
    %37 = "top.Concat"(%32, %33, %34, %35, %36) {axis = 0 : si32} : (tensor<1x1x1xf32>, tensor<1x1x1xf32>, tensor<1x1x1xf32>, tensor<1x1x1xf32>, tensor<1x1x1xf32>) -> tensor<5x1x1xf32> loc(#loc37)
    %38 = "top.Reduce"(%37) {axes = [0], keepdims = false, mode = "ReduceSum"} : (tensor<5x1x1xf32>) -> tensor<1x1xf32> loc(#loc38)
    %39 = "top.Unsqueeze"(%5) {axes = [0]} : (tensor<1x64xf32>) -> tensor<1x1x64xf32> loc(#loc39)
    %40 = "top.Unsqueeze"(%9) {axes = [0]} : (tensor<1x64xf32>) -> tensor<1x1x64xf32> loc(#loc40)
    %41 = "top.Unsqueeze"(%13) {axes = [0]} : (tensor<1x64xf32>) -> tensor<1x1x64xf32> loc(#loc41)
    %42 = "top.Unsqueeze"(%17) {axes = [0]} : (tensor<1x64xf32>) -> tensor<1x1x64xf32> loc(#loc42)
    %43 = "top.Unsqueeze"(%21) {axes = [0]} : (tensor<1x64xf32>) -> tensor<1x1x64xf32> loc(#loc43)
    %44 = "top.Concat"(%39, %40, %41, %42, %43) {axis = 0 : si32} : (tensor<1x1x64xf32>, tensor<1x1x64xf32>, tensor<1x1x64xf32>, tensor<1x1x64xf32>, tensor<1x1x64xf32>) -> tensor<5x1x64xf32> loc(#loc44)
    %45 = "top.Reduce"(%44) {axes = [0], keepdims = false, mode = "ReduceSum"} : (tensor<5x1x64xf32>) -> tensor<1x64xf32> loc(#loc45)
    %46 = "top.Mul"(%45, %45) : (tensor<1x64xf32>, tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc46)
    %47 = "top.Mul"(%44, %44) : (tensor<5x1x64xf32>, tensor<5x1x64xf32>) -> tensor<5x1x64xf32> loc(#loc47)
    %48 = "top.Reduce"(%47) {axes = [0], keepdims = false, mode = "ReduceSum"} : (tensor<5x1x64xf32>) -> tensor<1x64xf32> loc(#loc48)
    %49 = "top.Sub"(%46, %48) : (tensor<1x64xf32>, tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc49)
    %50 = "top.MulConst"(%49) {const_val = 5.000000e-01 : f64} : (tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc50)
    %51 = "top.Reduce"(%50) {axes = [1], keepdims = false, mode = "ReduceSum"} : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc51)
    %52 = "top.Reshape"(%51) : (tensor<1xf32>) -> tensor<1x1xf32> loc(#loc52)
    %53 = "top.Add"(%38, %52) : (tensor<1x1xf32>, tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc53)
    %54 = "top.Concat"(%5, %9, %13, %17, %21) {axis = 1 : si32} : (tensor<1x64xf32>, tensor<1x64xf32>, tensor<1x64xf32>, tensor<1x64xf32>, tensor<1x64xf32>) -> tensor<1x320xf32> loc(#loc54)
    %55 = "top.Weight"() : () -> tensor<320x500xf32> loc(#loc55)
    %56 = "top.Weight"() : () -> tensor<500xf32> loc(#loc56)
    %57 = "top.MatMul"(%54, %55, %56) {do_relu = false} : (tensor<1x320xf32>, tensor<320x500xf32>, tensor<500xf32>) -> tensor<1x500xf32> loc(#loc57)
    %58 = "top.Relu"(%57) : (tensor<1x500xf32>) -> tensor<1x500xf32> loc(#loc58)
    %59 = "top.Weight"() : () -> tensor<500x500xf32> loc(#loc59)
    %60 = "top.Weight"() : () -> tensor<500xf32> loc(#loc60)
    %61 = "top.MatMul"(%58, %59, %60) {do_relu = false} : (tensor<1x500xf32>, tensor<500x500xf32>, tensor<500xf32>) -> tensor<1x500xf32> loc(#loc61)
    %62 = "top.Relu"(%61) : (tensor<1x500xf32>) -> tensor<1x500xf32> loc(#loc62)
    %63 = "top.Weight"() : () -> tensor<500x500xf32> loc(#loc63)
    %64 = "top.Weight"() : () -> tensor<500xf32> loc(#loc64)
    %65 = "top.MatMul"(%62, %63, %64) {do_relu = false} : (tensor<1x500xf32>, tensor<500x500xf32>, tensor<500xf32>) -> tensor<1x500xf32> loc(#loc65)
    %66 = "top.Relu"(%65) : (tensor<1x500xf32>) -> tensor<1x500xf32> loc(#loc66)
    %67 = "top.Weight"() : () -> tensor<500x500xf32> loc(#loc67)
    %68 = "top.Weight"() : () -> tensor<500xf32> loc(#loc68)
    %69 = "top.MatMul"(%66, %67, %68) {do_relu = false} : (tensor<1x500xf32>, tensor<500x500xf32>, tensor<500xf32>) -> tensor<1x500xf32> loc(#loc69)
    %70 = "top.Relu"(%69) : (tensor<1x500xf32>) -> tensor<1x500xf32> loc(#loc70)
    %71 = "top.Weight"() : () -> tensor<500x1xf32> loc(#loc71)
    %72 = "top.Weight"() : () -> tensor<1xf32> loc(#loc72)
    %73 = "top.MatMul"(%70, %71, %72) {do_relu = false} : (tensor<1x500xf32>, tensor<500x1xf32>, tensor<1xf32>) -> tensor<1x1xf32> loc(#loc73)
    %74 = "top.Add"(%53, %73) : (tensor<1x1xf32>, tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc74)
    %75 = "top.Sigmoid"(%74) {bias = 0.000000e+00 : f64, scale = 1.000000e+00 : f64} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc75)
    return %75 : tensor<1x1xf32> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc1 = loc("input")
#loc2 = loc("/embedding_layer/Gather_output_0_Slice")
#loc3 = loc("/embedding_layer/Gather_output_0_Gather")
#loc4 = loc("embedding_layer.embedding_layer.uid.weight")
#loc5 = loc("/embedding_layer/uid/Gather_output_0_Gather")
#loc6 = loc("/embedding_layer/Gather_1_output_0_Slice")
#loc7 = loc("/embedding_layer/Gather_1_output_0_Gather")
#loc8 = loc("embedding_layer.embedding_layer.vid.weight")
#loc9 = loc("/embedding_layer/vid/Gather_output_0_Gather")
#loc10 = loc("/embedding_layer/Gather_2_output_0_Slice")
#loc11 = loc("/embedding_layer/Gather_2_output_0_Gather")
#loc12 = loc("embedding_layer.embedding_layer.sex.weight")
#loc13 = loc("/embedding_layer/sex/Gather_output_0_Gather")
#loc14 = loc("/embedding_layer/Gather_3_output_0_Slice")
#loc15 = loc("/embedding_layer/Gather_3_output_0_Gather")
#loc16 = loc("embedding_layer.embedding_layer.age.weight")
#loc17 = loc("/embedding_layer/age/Gather_output_0_Gather")
#loc18 = loc("/embedding_layer/Gather_4_output_0_Slice")
#loc19 = loc("/embedding_layer/Gather_4_output_0_Gather")
#loc20 = loc("embedding_layer.embedding_layer.job.weight")
#loc21 = loc("/embedding_layer/job/Gather_output_0_Gather")
#loc22 = loc("fm_layer.lr_layer.embedding_layer.embedding_layer.uid.weight")
#loc23 = loc("/fm_layer/lr_layer/embedding_layer/uid/Gather_output_0_Gather")
#loc24 = loc("fm_layer.lr_layer.embedding_layer.embedding_layer.vid.weight")
#loc25 = loc("/fm_layer/lr_layer/embedding_layer/vid/Gather_output_0_Gather")
#loc26 = loc("fm_layer.lr_layer.embedding_layer.embedding_layer.sex.weight")
#loc27 = loc("/fm_layer/lr_layer/embedding_layer/sex/Gather_output_0_Gather")
#loc28 = loc("fm_layer.lr_layer.embedding_layer.embedding_layer.age.weight")
#loc29 = loc("/fm_layer/lr_layer/embedding_layer/age/Gather_output_0_Gather")
#loc30 = loc("fm_layer.lr_layer.embedding_layer.embedding_layer.job.weight")
#loc31 = loc("/fm_layer/lr_layer/embedding_layer/job/Gather_output_0_Gather")
#loc32 = loc("/fm_layer/lr_layer/Unsqueeze_output_0_Unsqueeze")
#loc33 = loc("/fm_layer/lr_layer/Unsqueeze_1_output_0_Unsqueeze")
#loc34 = loc("/fm_layer/lr_layer/Unsqueeze_2_output_0_Unsqueeze")
#loc35 = loc("/fm_layer/lr_layer/Unsqueeze_3_output_0_Unsqueeze")
#loc36 = loc("/fm_layer/lr_layer/Unsqueeze_4_output_0_Unsqueeze")
#loc37 = loc("/fm_layer/lr_layer/Concat_output_0_Concat")
#loc38 = loc("/fm_layer/lr_layer/ReduceSum_output_0_ReduceSum")
#loc39 = loc("/fm_layer/inner_product_layer/Unsqueeze_output_0_Unsqueeze")
#loc40 = loc("/fm_layer/inner_product_layer/Unsqueeze_1_output_0_Unsqueeze")
#loc41 = loc("/fm_layer/inner_product_layer/Unsqueeze_2_output_0_Unsqueeze")
#loc42 = loc("/fm_layer/inner_product_layer/Unsqueeze_3_output_0_Unsqueeze")
#loc43 = loc("/fm_layer/inner_product_layer/Unsqueeze_4_output_0_Unsqueeze")
#loc44 = loc("/fm_layer/inner_product_layer/Concat_output_0_Concat")
#loc45 = loc("/fm_layer/inner_product_layer/ReduceSum_output_0_ReduceSum")
#loc46 = loc("/fm_layer/inner_product_layer/Pow_output_0_Pow")
#loc47 = loc("/fm_layer/inner_product_layer/Pow_1_output_0_Pow")
#loc48 = loc("/fm_layer/inner_product_layer/ReduceSum_1_output_0_ReduceSum")
#loc49 = loc("/fm_layer/inner_product_layer/Sub_output_0_Sub")
#loc50 = loc("/fm_layer/inner_product_layer/Mul_output_0_Mul")
#loc51 = loc("/fm_layer/inner_product_layer/ReduceSum_2_output_0_ReduceSum")
#loc52 = loc("/fm_layer/inner_product_layer/Reshape_output_0_Reshape")
#loc53 = loc("/fm_layer/Add_output_0_Add")
#loc54 = loc("/Concat_output_0_Concat")
#loc55 = loc("dnn.dnn.0.weight_fix")
#loc56 = loc("dnn.dnn.0.bias")
#loc57 = loc("/dnn/dnn/dnn.0/Gemm_output_0_Gemm")
#loc58 = loc("/dnn/dnn/dnn.1/Relu_output_0_Relu")
#loc59 = loc("dnn.dnn.2.weight_fix")
#loc60 = loc("dnn.dnn.2.bias")
#loc61 = loc("/dnn/dnn/dnn.2/Gemm_output_0_Gemm")
#loc62 = loc("/dnn/dnn/dnn.3/Relu_output_0_Relu")
#loc63 = loc("dnn.dnn.4.weight_fix")
#loc64 = loc("dnn.dnn.4.bias")
#loc65 = loc("/dnn/dnn/dnn.4/Gemm_output_0_Gemm")
#loc66 = loc("/dnn/dnn/dnn.5/Relu_output_0_Relu")
#loc67 = loc("dnn.dnn.6.weight_fix")
#loc68 = loc("dnn.dnn.6.bias")
#loc69 = loc("/dnn/dnn/dnn.6/Gemm_output_0_Gemm")
#loc70 = loc("/dnn/dnn/dnn.7/Relu_output_0_Relu")
#loc71 = loc("dnn.dnn.8.weight_fix")
#loc72 = loc("dnn.dnn.8.bias")
#loc73 = loc("/dnn/dnn/dnn.8/Gemm_output_0_Gemm")
#loc74 = loc("/Add_output_0_Add")
#loc75 = loc("output_Sigmoid")
