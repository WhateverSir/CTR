#loc = loc(unknown)
#loc1 = loc("input")
module attributes {module.FLOPs = 467201792 : i64, module.asymmetric = true, module.chip = "bm1684x", module.coeff_addr = 4294967296 : i64, module.coeff_size = 6066176 : i64, module.mode = "F32", module.name = "WideDeep", module.neuron_addr = 4301033472 : i64, module.neuron_size = 1036288 : i64, module.platform = "ONNX", module.state = "TPU_ADDRESSED", module.weight_file = "widedeep_tpu_addressed_bm1684x_f32_weight.npz"} {
  func.func @main(%arg0: tensor<256x5xf32> loc(unknown)) -> tensor<256x1xf32, 4301041664 : i64> {
    %0 = "top.Input"(%arg0) : (tensor<256x5xf32>) -> tensor<256x5xf32, 4301033472 : i64> loc(#loc1)
    %1 = call @subfunc_0(%0) : (tensor<256x5xf32, 4301033472 : i64>) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc)
    return %1 : tensor<256x1xf32, 4301041664 : i64> loc(#loc)
  } loc(#loc)
  func.func @subfunc_0(%arg0: tensor<256x5xf32, 4301033472 : i64> loc("input")) -> tensor<256x1xf32, 4301041664 : i64> attributes {id = 0 : i64, mode = #tpu<run_mode TPU_STATIC>, next_index = array<i32: -1>} {
    %0 = "top.None"() : () -> none loc(#loc)
    %1 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 1], offset = [0, 0], steps = [1, 1]} : (tensor<256x5xf32, 4301033472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc2)
    %2 = "tpu.Reshape"(%1) : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<256xf32, 4301041664 : i64> loc(#loc3)
    %3 = "tpu.Cast"(%2) {with_scale = true} : (tensor<256xf32, 4301041664 : i64>) -> tensor<256xi32, 4301045760 : i64> loc(#loc4)
    %4 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 2], offset = [0, 1], steps = [1, 1]} : (tensor<256x5xf32, 4301033472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc5)
    %5 = "tpu.Reshape"(%4) : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<256xf32, 4301041664 : i64> loc(#loc6)
    %6 = "tpu.Cast"(%5) {with_scale = true} : (tensor<256xf32, 4301041664 : i64>) -> tensor<256xi32, 4301111296 : i64> loc(#loc7)
    %7 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 3], offset = [0, 2], steps = [1, 1]} : (tensor<256x5xf32, 4301033472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc8)
    %8 = "tpu.Reshape"(%7) : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<256xf32, 4301041664 : i64> loc(#loc9)
    %9 = "tpu.Cast"(%8) {with_scale = true} : (tensor<256xf32, 4301041664 : i64>) -> tensor<256xi32, 4301176832 : i64> loc(#loc10)
    %10 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 4], offset = [0, 3], steps = [1, 1]} : (tensor<256x5xf32, 4301033472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc11)
    %11 = "tpu.Reshape"(%10) : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<256xf32, 4301041664 : i64> loc(#loc12)
    %12 = "tpu.Cast"(%11) {with_scale = true} : (tensor<256xf32, 4301041664 : i64>) -> tensor<256xi32, 4301242368 : i64> loc(#loc13)
    %13 = "tpu.Slice"(%arg0, %0, %0, %0, %0) {ends = [256, 5], offset = [0, 4], steps = [1, 1]} : (tensor<256x5xf32, 4301033472 : i64>, none, none, none, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc14)
    %14 = "tpu.Reshape"(%13) : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<256xf32, 4301041664 : i64> loc(#loc15)
    %15 = "tpu.Cast"(%14) {with_scale = true} : (tensor<256xf32, 4301041664 : i64>) -> tensor<256xi32, 4301307904 : i64> loc(#loc16)
    %16 = "top.Weight"() : () -> tensor<6032x1xf32, 4294967296 : i64> loc(#loc17)
    %17 = "tpu.Gather"(%16, %3, %0) {axis = 0 : i64} : (tensor<6032x1xf32, 4294967296 : i64>, tensor<256xi32, 4301045760 : i64>, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc18)
    %18 = "tpu.Unsqueeze"(%17) {axes = [0]} : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<1x256x1xf32, 4301312000 : i64> loc(#loc19)
    %19 = "top.Weight"() : () -> tensor<3027x1xf32, 4294991872 : i64> loc(#loc20)
    %20 = "tpu.Gather"(%19, %6, %0) {axis = 0 : i64} : (tensor<3027x1xf32, 4294991872 : i64>, tensor<256xi32, 4301111296 : i64>, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc21)
    %21 = "tpu.Unsqueeze"(%20) {axes = [0]} : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<1x256x1xf32, 4301313024 : i64> loc(#loc22)
    %22 = "top.Weight"() : () -> tensor<3x1xf32, 4295004160 : i64> loc(#loc23)
    %23 = "tpu.Gather"(%22, %9, %0) {axis = 0 : i64} : (tensor<3x1xf32, 4295004160 : i64>, tensor<256xi32, 4301176832 : i64>, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc24)
    %24 = "tpu.Unsqueeze"(%23) {axes = [0]} : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<1x256x1xf32, 4301314048 : i64> loc(#loc25)
    %25 = "top.Weight"() : () -> tensor<8x1xf32, 4295008256 : i64> loc(#loc26)
    %26 = "tpu.Gather"(%25, %12, %0) {axis = 0 : i64} : (tensor<8x1xf32, 4295008256 : i64>, tensor<256xi32, 4301242368 : i64>, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc27)
    %27 = "tpu.Unsqueeze"(%26) {axes = [0]} : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<1x256x1xf32, 4301315072 : i64> loc(#loc28)
    %28 = "top.Weight"() : () -> tensor<22x1xf32, 4295012352 : i64> loc(#loc29)
    %29 = "tpu.Gather"(%28, %15, %0) {axis = 0 : i64} : (tensor<22x1xf32, 4295012352 : i64>, tensor<256xi32, 4301307904 : i64>, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc30)
    %30 = "tpu.Unsqueeze"(%29) {axes = [0]} : (tensor<256x1xf32, 4301041664 : i64>) -> tensor<1x256x1xf32, 4301316096 : i64> loc(#loc31)
    %31 = "tpu.Concat"(%18, %21, %24, %27, %30) {axis = 0 : si32, do_relu = false, only_merge = true, relu_limit = -1.000000e+00 : f64} : (tensor<1x256x1xf32, 4301312000 : i64>, tensor<1x256x1xf32, 4301313024 : i64>, tensor<1x256x1xf32, 4301314048 : i64>, tensor<1x256x1xf32, 4301315072 : i64>, tensor<1x256x1xf32, 4301316096 : i64>) -> tensor<5x256x1xf32, 4301312000 : i64> loc(#loc32)
    %32 = "tpu.Reduce"(%31, %0, %0) {axes = [0], keepdims = false, mode = "ReduceSum"} : (tensor<5x256x1xf32, 4301312000 : i64>, none, none) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc33)
    %33 = "top.Weight"() : () -> tensor<6032x64xf32, 4295016448 : i64> loc(#loc34)
    %34 = "tpu.Gather"(%33, %3, %0) {axis = 0 : i64} : (tensor<6032x64xf32, 4295016448 : i64>, tensor<256xi32, 4301045760 : i64>, none) -> tensor<256x64xf32, 4301885440 : i64> loc(#loc35)
    %35 = "top.Weight"() : () -> tensor<3027x64xf32, 4296560640 : i64> loc(#loc36)
    %36 = "tpu.Gather"(%35, %6, %0) {axis = 0 : i64} : (tensor<3027x64xf32, 4296560640 : i64>, tensor<256xi32, 4301111296 : i64>, none) -> tensor<256x64xf32, 4301045760 : i64> loc(#loc37)
    %37 = "top.Weight"() : () -> tensor<3x64xf32, 4297338880 : i64> loc(#loc38)
    %38 = "tpu.Gather"(%37, %9, %0) {axis = 0 : i64} : (tensor<3x64xf32, 4297338880 : i64>, tensor<256xi32, 4301176832 : i64>, none) -> tensor<256x64xf32, 4301111296 : i64> loc(#loc39)
    %39 = "top.Weight"() : () -> tensor<8x64xf32, 4297342976 : i64> loc(#loc40)
    %40 = "tpu.Gather"(%39, %12, %0) {axis = 0 : i64} : (tensor<8x64xf32, 4297342976 : i64>, tensor<256xi32, 4301242368 : i64>, none) -> tensor<256x64xf32, 4301176832 : i64> loc(#loc41)
    %41 = "top.Weight"() : () -> tensor<22x64xf32, 4297347072 : i64> loc(#loc42)
    %42 = "tpu.Gather"(%41, %15, %0) {axis = 0 : i64} : (tensor<22x64xf32, 4297347072 : i64>, tensor<256xi32, 4301307904 : i64>, none) -> tensor<256x64xf32, 4301242368 : i64> loc(#loc43)
    %43 = "tpu.Concat"(%34, %36, %38, %40, %42) {axis = 1 : si32, do_relu = false, only_merge = false, relu_limit = -1.000000e+00 : f64} : (tensor<256x64xf32, 4301885440 : i64>, tensor<256x64xf32, 4301045760 : i64>, tensor<256x64xf32, 4301111296 : i64>, tensor<256x64xf32, 4301176832 : i64>, tensor<256x64xf32, 4301242368 : i64>) -> tensor<256x320xf32, 4301557760 : i64> loc(#loc44)
    %44 = "top.Weight"() : () -> tensor<320x500xf32, 4297355264 : i64> loc(#loc45)
    %45 = "top.Weight"() : () -> tensor<1x1x1x500xf32, 4297998336 : i64> loc(#loc46)
    %46 = "tpu.MatMul"(%43, %44, %45) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 0 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x320xf32, 4301557760 : i64>, tensor<320x500xf32, 4297355264 : i64>, tensor<1x1x1x500xf32, 4297998336 : i64>) -> tensor<256x500xf32, 4301045760 : i64> loc(#loc47)
    %47 = "top.Weight"() : () -> tensor<500x500xf32, 4298002432 : i64> loc(#loc48)
    %48 = "top.Weight"() : () -> tensor<1x1x1x500xf32, 4299005952 : i64> loc(#loc49)
    %49 = "tpu.MatMul"(%46, %47, %48) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 0 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x500xf32, 4301045760 : i64>, tensor<500x500xf32, 4298002432 : i64>, tensor<1x1x1x500xf32, 4299005952 : i64>) -> tensor<256x500xf32, 4301557760 : i64> loc(#loc50)
    %50 = "top.Weight"() : () -> tensor<500x500xf32, 4299010048 : i64> loc(#loc51)
    %51 = "top.Weight"() : () -> tensor<1x1x1x500xf32, 4300013568 : i64> loc(#loc52)
    %52 = "tpu.MatMul"(%49, %50, %51) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 0 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x500xf32, 4301557760 : i64>, tensor<500x500xf32, 4299010048 : i64>, tensor<1x1x1x500xf32, 4300013568 : i64>) -> tensor<256x500xf32, 4301045760 : i64> loc(#loc53)
    %53 = "top.Weight"() : () -> tensor<500x500xf32, 4300017664 : i64> loc(#loc54)
    %54 = "top.Weight"() : () -> tensor<1x1x1x500xf32, 4301021184 : i64> loc(#loc55)
    %55 = "tpu.MatMul"(%52, %53, %54) {do_relu = true, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 0 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x500xf32, 4301045760 : i64>, tensor<500x500xf32, 4300017664 : i64>, tensor<1x1x1x500xf32, 4301021184 : i64>) -> tensor<256x500xf32, 4301557760 : i64> loc(#loc56)
    %56 = "top.Weight"() : () -> tensor<500x1xf32, 4301025280 : i64> loc(#loc57)
    %57 = "top.Weight"() : () -> tensor<1x1x1x1xf32, 4301029376 : i64> loc(#loc58)
    %58 = "tpu.MatMul"(%55, %56, %57) {do_relu = false, hdim_is_batch = false, input_zp = 0 : i64, keep_dims = true, left_reuse = 0 : i64, left_transpose = false, multipliers = [1], output_transpose = false, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, right_transpose = false, right_zp = 0 : i64, rshifts = [0]} : (tensor<256x500xf32, 4301557760 : i64>, tensor<500x1xf32, 4301025280 : i64>, tensor<1x1x1x1xf32, 4301029376 : i64>) -> tensor<256x1xf32, 4301045760 : i64> loc(#loc59)
    %59 = "tpu.Mul"(%32, %58) {do_relu = false, multiplier = 1 : si32, quant_mode = #tpu<rq_mode MultiplierShift>, relu_limit = -1.000000e+00 : f64, rshift = 0 : si32} : (tensor<256x1xf32, 4301041664 : i64>, tensor<256x1xf32, 4301045760 : i64>) -> tensor<256x1xf32, 4301049856 : i64> loc(#loc60)
    %60 = "tpu.Active"(%59) {bias = 0.000000e+00 : f64, log = false, mode = #tpu<active_mode SIGMOID>, scale = 1.000000e+00 : f64} : (tensor<256x1xf32, 4301049856 : i64>) -> tensor<256x1xf32, 4301041664 : i64> loc(#loc61)
    return %60 : tensor<256x1xf32, 4301041664 : i64> loc(#loc)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/embedding_layer/Gather_output_0_Slice")
#loc3 = loc("/embedding_layer/Gather_output_0_Gather")
#loc4 = loc("/embedding_layer/Gather_output_0_Gather_si32")
#loc5 = loc("/embedding_layer/Gather_1_output_0_Slice")
#loc6 = loc("/embedding_layer/Gather_1_output_0_Gather")
#loc7 = loc("/embedding_layer/Gather_1_output_0_Gather_si32")
#loc8 = loc("/embedding_layer/Gather_2_output_0_Slice")
#loc9 = loc("/embedding_layer/Gather_2_output_0_Gather")
#loc10 = loc("/embedding_layer/Gather_2_output_0_Gather_si32")
#loc11 = loc("/embedding_layer/Gather_3_output_0_Slice")
#loc12 = loc("/embedding_layer/Gather_3_output_0_Gather")
#loc13 = loc("/embedding_layer/Gather_3_output_0_Gather_si32")
#loc14 = loc("/embedding_layer/Gather_4_output_0_Slice")
#loc15 = loc("/embedding_layer/Gather_4_output_0_Gather")
#loc16 = loc("/embedding_layer/Gather_4_output_0_Gather_si32")
#loc17 = loc("lr_layer.embedding_layer.embedding_layer.uid.weight")
#loc18 = loc("/lr_layer/embedding_layer/uid/Gather_output_0_Gather")
#loc19 = loc("/lr_layer/Unsqueeze_output_0_Unsqueeze")
#loc20 = loc("lr_layer.embedding_layer.embedding_layer.vid.weight")
#loc21 = loc("/lr_layer/embedding_layer/vid/Gather_output_0_Gather")
#loc22 = loc("/lr_layer/Unsqueeze_1_output_0_Unsqueeze")
#loc23 = loc("lr_layer.embedding_layer.embedding_layer.sex.weight")
#loc24 = loc("/lr_layer/embedding_layer/sex/Gather_output_0_Gather")
#loc25 = loc("/lr_layer/Unsqueeze_2_output_0_Unsqueeze")
#loc26 = loc("lr_layer.embedding_layer.embedding_layer.age.weight")
#loc27 = loc("/lr_layer/embedding_layer/age/Gather_output_0_Gather")
#loc28 = loc("/lr_layer/Unsqueeze_3_output_0_Unsqueeze")
#loc29 = loc("lr_layer.embedding_layer.embedding_layer.job.weight")
#loc30 = loc("/lr_layer/embedding_layer/job/Gather_output_0_Gather")
#loc31 = loc("/lr_layer/Unsqueeze_4_output_0_Unsqueeze")
#loc32 = loc("/lr_layer/Concat_output_0_Concat")
#loc33 = loc("/lr_layer/ReduceSum_output_0_ReduceSum")
#loc34 = loc("embedding_layer.embedding_layer.uid.weight")
#loc35 = loc("/embedding_layer/uid/Gather_output_0_Gather")
#loc36 = loc("embedding_layer.embedding_layer.vid.weight")
#loc37 = loc("/embedding_layer/vid/Gather_output_0_Gather")
#loc38 = loc("embedding_layer.embedding_layer.sex.weight")
#loc39 = loc("/embedding_layer/sex/Gather_output_0_Gather")
#loc40 = loc("embedding_layer.embedding_layer.age.weight")
#loc41 = loc("/embedding_layer/age/Gather_output_0_Gather")
#loc42 = loc("embedding_layer.embedding_layer.job.weight")
#loc43 = loc("/embedding_layer/job/Gather_output_0_Gather")
#loc44 = loc("/Concat_output_0_Concat")
#loc45 = loc("dnn.dnn.0.weight_fix")
#loc46 = loc("dnn.dnn.0.bias")
#loc47 = loc("/dnn/dnn/dnn.1/Relu_output_0_Relu")
#loc48 = loc("dnn.dnn.2.weight_fix")
#loc49 = loc("dnn.dnn.2.bias")
#loc50 = loc("/dnn/dnn/dnn.3/Relu_output_0_Relu")
#loc51 = loc("dnn.dnn.4.weight_fix")
#loc52 = loc("dnn.dnn.4.bias")
#loc53 = loc("/dnn/dnn/dnn.5/Relu_output_0_Relu")
#loc54 = loc("dnn.dnn.6.weight_fix")
#loc55 = loc("dnn.dnn.6.bias")
#loc56 = loc("/dnn/dnn/dnn.7/Relu_output_0_Relu")
#loc57 = loc("dnn.dnn.8.weight_fix")
#loc58 = loc("dnn.dnn.8.bias")
#loc59 = loc("/dnn/dnn/dnn.8/Gemm_output_0_Gemm")
#loc60 = loc("/Mul_output_0_Mul")
#loc61 = loc("output_Sigmoid")

